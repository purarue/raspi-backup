#!/bin/bash

THIS_DIR="$(realpath "$(dirname "${BASH_SOURCE[0]}")")"
cd "$THIS_DIR"

# source configuration
. configure

# n: dry backup
BACKUP_DRY=0
BACKUP_DELETE=0
while getopts "ndh" opt; do
	case $opt in
	n)
		BACKUP_DRY=1
		;;
	d)
		BACKUP_DELETE=1
		;;
	h)
		printf "Backs up my system to my local raspberry pi over the network\n"
		printf "Provide the -n option to do a --dry-run\n"
		printf "Provide the -d option to delete any files not present on this system (--delete-before rsync flag)\n"
		exit 0
		;;
	\?)
		echo "Invalid option provided. Run $0 -h for help" >&2
		exit 1
		;;
	*)
		echo "Unknown argument: $OPTARG" >&2
		exit 1
		;;
	esac
done

declare IP
# exits if PI cannot be found
IP="$(./findpi-ip)" || exit $?
readonly IP

# ssh in and create the base directories
ssh "${PI_USER}@${IP}" "$(printf 'cd "%s" && mkdir -p "%s"' "$BACKUP_DIR_PI" "./${CLONE}")"

### RSYNC CLONE DIRECTORIES
# these are described in the .txt files in this directory
# If the -d flag is provided, items are deleted on the
# remote machine when they're deleted on mine.

declare -a RSYNC_FLAGS
# basic configuration flags
RSYNC_FLAGS=(--archive --compress --partial --progress --human-readable --ignore-errors --verbose --recursive)
# if specified, do dry run
[[ "$BACKUP_DRY" == 1 ]] && RSYNC_FLAGS+=(--dry-run)
# if specified, delete before
[[ "$BACKUP_DELETE" == 1 ]] && RSYNC_FLAGS+=(--delete-before)
# include/exclude lists
RSYNC_FLAGS+=(--files-from="${THIS_DIR}/clone_include_files.txt" --exclude-from="${THIS_DIR}/clone_exclude_files.txt")
# location from (root dir) to server (see ./configure)
RSYNC_FLAGS+=(/ "${PI_USER}@${IP}:${BACKUP_DIR_CLONE}")

exec rsync "${RSYNC_FLAGS[@]}"
