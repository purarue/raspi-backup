#!/usr/bin/env bash

readonly script_name='raspi-backup'

# https://github.com/seanbreckenridge/havecmd
havecmd() {
	local BINARY ERRMSG
	# error if first argument isn't provided
	BINARY="${1:?Must provide command to check}"
	# the commend exists, exit with 0 (success!)
	if command -v "$BINARY" >/dev/null 2>&1; then
		return 0
	else
		# construct error message
		ERRMSG="'$script_name' requires '$BINARY', could not find that on your \$PATH"
		if [[ -n "$2" ]]; then
			ERRMSG="$ERRMSG. $2"
		fi
		printf '%s\n' "$ERRMSG" 1>&2
		return 1
	fi
}

set -e
havecmd arp
havecmd ssh
havecmd rsync
havecmd realpath
set +e

# name of user to ssh into machine
# default username for raspbian is 'pi'
declare -rx PI_USER='pi'

# the base directory to back up to on the remote PI
declare -rx BACKUP_DIR_PI='../data'

# names of directory on the remote machine at $BACKUP_DIR_PI for backups
# clone is a direct clone (rsync --delete-before) of the clone_{include, exclude}.txt files
declare -rx CLONE='clone'

# Full, relative paths on remote PI
declare -rx BACKUP_DIR_CLONE="${BACKUP_DIR_PI}/${CLONE}"
